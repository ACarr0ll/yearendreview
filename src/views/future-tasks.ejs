<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Future Tasks</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <%- include('partials/_navbar', { isLoggedIn: isLoggedIn }) %>
    <header>
        <h1>Future Tasks</h1>
    </header>
    <main>
        <form action="/future-tasks" method="POST" class="task-form">
            <div>
                <label for="title">Task Title:</label>
                <input type="text" id="title" name="title" required>
            </div>
            <div>
                <label for="description">Description:</label>
                <textarea id="description" name="description"></textarea>
            </div>
            <div>
                <label for="dueDate">Due Date:</label>
                <input type="date" id="dueDate" name="dueDate" required>
            </div>
            <div>
                <label for="priority">Priority:</label>
                <select id="priority" name="priority" required>
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </div>
            <button type="submit">Add Task</button>
        </form>

        <div class="calendar-container">
            <div class="calendar-header">
                <button onclick="previousMonth()">&lt;</button>
                <h2 id="currentMonth"></h2>
                <button onclick="nextMonth()">&gt;</button>
            </div>
            <div class="calendar-grid">
                <div class="calendar-day-header">Sun</div>
                <div class="calendar-day-header">Mon</div>
                <div class="calendar-day-header">Tue</div>
                <div class="calendar-day-header">Wed</div>
                <div class="calendar-day-header">Thu</div>
                <div class="calendar-day-header">Fri</div>
                <div class="calendar-day-header">Sat</div>
                <% /* Calendar days will be inserted here by JavaScript */ %>
            </div>
        </div>

        <div id="taskModal" class="modal">
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <h2>Complete Task</h2>
                <form action="/submission" method="POST" id="completeTaskForm">
                    <div class="date-time-group">
                        <div>
                            <label for="date">Date:</label>
                            <input type="date" id="date" name="date" required>
                        </div>
                        <div>
                            <label for="time">Time:</label>
                            <input type="time" id="time" name="time" required>
                        </div>
                    </div>
                    <div>
                        <label for="type">Type:</label>
                        <select id="type" name="type" required onchange="toggleModalFields()">
                            <option value="">Select a type...</option>
                            <option value="Case">Case</option>
                            <option value="Assistance">Assistance</option>
                            <option value="Project">Project</option>
                        </select>
                    </div>
                    <div id="modalCaseNumberField" style="display: none;">
                        <label for="modalCaseNumber">Case Number: *</label>
                        <input type="text" 
                               id="modalCaseNumber" 
                               name="caseNumber" 
                               pattern="[0-9]+" 
                               title="Please enter a valid case number">
                    </div>
                    <div id="modalAnalystField" style="display: none;">
                        <label for="modalAnalyst">Analyst: *</label>
                        <input type="text" 
                               id="modalAnalyst" 
                               name="analyst">
                    </div>
                    <div>
                        <label for="shortDescription">Short Description:</label>
                        <input type="text" 
                               id="shortDescription" 
                               name="shortDescription" 
                               required>
                    </div>
                    <div>
                        <label for="additionalInfo">Additional Information:</label>
                        <textarea id="additionalInfo" 
                                 name="additionalInfo"></textarea>
                    </div>
                    <div>
                        <label for="timeTaken">Time Taken (minutes):</label>
                        <input type="number" 
                               id="timeTaken" 
                               name="timeTaken" 
                               min="0" 
                               required>
                    </div>
                    <input type="hidden" id="taskId" name="taskId">
                    <div class="button-row">
                        <button type="submit">Complete Task</button>
                        <button type="button" class="cancel-button" onclick="closeModal()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="tasks-list">
            <% tasks.forEach(task => { %>
                <div class="task-card">
                    <h3><%= task.title %></h3>
                    <p><%= task.description %></p>
                    <div class="task-meta">
                        <span>Due: <%= new Date(task.due_date).toLocaleDateString() %></span>
                        <span class="priority-<%= task.priority.toLowerCase() %>">
                            Priority: <%= task.priority %>
                        </span>
                    </div>
                </div>
            <% }) %>
        </div>
    </main>

    <script>
        const tasks = <%- JSON.stringify(tasks) %>;
        let currentDate = new Date();

        function renderCalendar() {
            const year = currentDate.getFullYear();
            const month = currentDate.getMonth();
            
            document.getElementById('currentMonth').textContent = 
                new Date(year, month).toLocaleString('default', { month: 'long', year: 'numeric' });

            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const daysInMonth = lastDay.getDate();
            const startingDay = firstDay.getDay();

            const calendarGrid = document.querySelector('.calendar-grid');
            const dayHeaders = document.querySelectorAll('.calendar-day-header');
            
            // Clear existing days
            Array.from(calendarGrid.children)
                .filter(child => !child.classList.contains('calendar-day-header'))
                .forEach(child => child.remove());

            // Add empty days for the start of the month
            for (let i = 0; i < startingDay; i++) {
                const emptyDay = document.createElement('div');
                emptyDay.className = 'calendar-day empty';
                calendarGrid.appendChild(emptyDay);
            }

            // Add days with tasks
            for (let day = 1; day <= daysInMonth; day++) {
                const dayDiv = document.createElement('div');
                dayDiv.className = 'calendar-day';
                
                const dateSpan = document.createElement('span');
                dateSpan.className = 'calendar-date';
                dateSpan.textContent = day;
                dayDiv.appendChild(dateSpan);

                // Add tasks for this day
                const dayTasks = tasks.filter(task => {
                    const taskDate = new Date(task.due_date);
                    return taskDate.getDate() === day && 
                           taskDate.getMonth() === month && 
                           taskDate.getFullYear() === year;
                });

                dayTasks.forEach(task => {
                    const taskDiv = document.createElement('div');
                    taskDiv.className = `task-item priority-${task.priority.toLowerCase()}`;
                    taskDiv.textContent = task.title;
                    taskDiv.title = task.description || 'No description';
                    taskDiv.onclick = () => openTaskModal(task);
                    dayDiv.appendChild(taskDiv);
                });

                calendarGrid.appendChild(dayDiv);
            }
        }

        function previousMonth() {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar();
        }

        function nextMonth() {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar();
        }

        // Initial render
        document.addEventListener('DOMContentLoaded', renderCalendar);

        function openTaskModal(task) {
            const modal = document.getElementById('taskModal');
            const form = document.getElementById('completeTaskForm');
            
            // Set current date and time
            const now = new Date();
            document.getElementById('date').value = now.toISOString().split('T')[0];
            document.getElementById('time').value = now.toTimeString().slice(0,5);
            
            // Populate form with task data
            document.getElementById('shortDescription').value = task.title;
            document.getElementById('additionalInfo').value = task.description || '';
            document.getElementById('taskId').value = task.id;
            
            // Show modal
            modal.style.display = 'block';
        }

        function closeModal() {
            const modal = document.getElementById('taskModal');
            modal.style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('taskModal');
            if (event.target == modal) {
                closeModal();
            }
        }

        function toggleModalFields() {
            const typeSelect = document.getElementById('type');
            const caseNumberField = document.getElementById('modalCaseNumberField');
            const analystField = document.getElementById('modalAnalystField');
            const caseNumberInput = document.getElementById('modalCaseNumber');
        }
    </script>
</body>
</html>